[{"/Users/jinwoo/Desktop/BlindCorona-FrontEnd/src/store/index.js":"1","/Users/jinwoo/Desktop/BlindCorona-FrontEnd/src/components/Main/NewsCard.js":"2","/Users/jinwoo/Desktop/BlindCorona-FrontEnd/src/components/Main/News.js":"3","/Users/jinwoo/Desktop/BlindCorona-FrontEnd/src/actions/ActionTypes.js":"4","/Users/jinwoo/Desktop/BlindCorona-FrontEnd/src/components/Main/Situation.js":"5","/Users/jinwoo/Desktop/BlindCorona-FrontEnd/src/utils/axios.js":"6"},{"size":484,"mtime":1606211330336,"results":"7","hashOfConfig":"8"},{"size":1806,"mtime":1606246120874,"results":"9","hashOfConfig":"8"},{"size":1312,"mtime":1606245733590,"results":"10","hashOfConfig":"8"},{"size":189,"mtime":1606213606363,"results":"11","hashOfConfig":"8"},{"size":3697,"mtime":1606248558771,"results":"12","hashOfConfig":"8"},{"size":289,"mtime":1606248566047,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1iqd821",{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jinwoo/Desktop/BlindCorona-FrontEnd/src/store/index.js",[],["28","29"],"/Users/jinwoo/Desktop/BlindCorona-FrontEnd/src/components/Main/NewsCard.js",["30","31","32","33"],"import { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { GetContent, GetNews } from \"../../actions/userAction\";\nfunction NewsCard({ props }) {\n    const DarkMode = useSelector(state => state.user.darkmode);\n    const [state, setState] = useState(\"none\");\n    const [color, setColor] = useState(\"white\");\n    const dispatch = useDispatch();\n    const [data, setData] = useState(\"\");\n    let a = new Date(props.pubDate);\n    function showclose() {\n        if (state === \"none\") {\n            const data = {\n                link: props.link\n            }\n            setState(\"news-active\");\n            setColor(\"checked\");\n            dispatch(GetContent(\"\", data))\n                .then((res) => {\n                    setData(res.payload.news);\n                    console.log(res)\n\n                    const speechMsg = new SpeechSynthesisUtterance();\n                    speechMsg.text = a.getMonth() + \"월\" + a.getDate() + \"일 뉴스\" + props.title + \"   \" + res.payload.news.content;\n                    window.speechSynthesis.speak(speechMsg)\n                })\n\n        }\n        else {\n            setState(\"none\");\n            setColor(null);\n            window.speechSynthesis.cancel();\n        }\n    }\n\n    return (\n        <li>\n            <div className=\"news-con\"></div>\n            <div onClick={showclose} dangerouslySetInnerHTML={{ __html: a.getMonth() + \"/\" + a.getDate() + \" \" + props.title }} className=\"news-title\"></div>\n            <div style={DarkMode ? { color: \"#ffffff\", background: \"#1a1a1a\" } : { color: \"#292828\", background: \"#292828\" }} className={\"news-inDetail \" + state}>\n                <img src={data.img} />\n                <pre>{data.content}</pre>\n            </div>\n        </li>\n    )\n\n}\nexport default NewsCard","/Users/jinwoo/Desktop/BlindCorona-FrontEnd/src/components/Main/News.js",["34"],"/Users/jinwoo/Desktop/BlindCorona-FrontEnd/src/actions/ActionTypes.js",[],"/Users/jinwoo/Desktop/BlindCorona-FrontEnd/src/components/Main/Situation.js",["35","36"],"/Users/jinwoo/Desktop/BlindCorona-FrontEnd/src/utils/axios.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":1,"column":10,"nodeType":"43","messageId":"44","endLine":1,"endColumn":19},{"ruleId":"41","severity":1,"message":"45","line":3,"column":22,"nodeType":"43","messageId":"44","endLine":3,"endColumn":29},{"ruleId":"41","severity":1,"message":"46","line":7,"column":12,"nodeType":"43","messageId":"44","endLine":7,"endColumn":17},{"ruleId":"47","severity":1,"message":"48","line":41,"column":17,"nodeType":"49","endLine":41,"endColumn":39},{"ruleId":"50","severity":1,"message":"51","line":17,"column":8,"nodeType":"52","endLine":17,"endColumn":10,"suggestions":"53"},{"ruleId":"41","severity":1,"message":"54","line":6,"column":23,"nodeType":"43","messageId":"44","endLine":6,"endColumn":34},{"ruleId":"50","severity":1,"message":"55","line":64,"column":8,"nodeType":"52","endLine":64,"endColumn":10,"suggestions":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'GetNews' is defined but never used.","'color' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["59"],"'useSelector' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props.text'. Either include them or remove the dependency array.",["60"],"no-global-assign","no-unsafe-negation",{"desc":"61","fix":"62"},{"desc":"63","fix":"64"},"Update the dependencies array to be: [dispatch]",{"range":"65","text":"66"},"Update the dependencies array to be: [dispatch, props.text]",{"range":"67","text":"68"},[603,605],"[dispatch]",[2336,2338],"[dispatch, props.text]"]